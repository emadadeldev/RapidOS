---
title: Playbook Installation Initialization
description: >
  This configuration file prepares playbook for optimal initialization and customization.
actions:
  - !writeStatus: {status: 'Prepairing for installation'}

  # Sets passwords to never expire
  - !run: {exe: 'net', args: 'accounts /maxpwage:unlimited'}
      
  # Copy necessary folders for proper playbook installation
  - !task: {path: 'additionals\copy-folders.yml'}
      
  # Configure Windows notifications settings
  - !registryValue:
      path: 'HKCU\Software\Microsoft\Windows\CurrentVersion\Notifications\Settings\Windows.SystemToast.SecurityAndMaintenance'
      value: 'Enabled'
      type: REG_DWORD
      data: '0'
  - !registryValue:
      path: 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings\Windows.SystemToast.SecurityAndMaintenance'
      value: 'Enabled'
      type: REG_DWORD
      data: '0'

  - !service: 
      name: wuauserv 
      operation: stop

  # Ð¡leans up the Windows component store (WinSxS) by removing outdated system files, superseded updates, and unnecessary components
  - !run: {exe: 'DISM', args: '/Online /Cleanup-Image /StartComponentCleanup', weight: 200}

  # Installing WinGet
  - !powerShell:
      command: 'powershell -NoP -EP Unrestricted -Command ".\Install-Software.ps1 -MyArgument install_winget"'
      runas: currentUserElevated
      exeDir: true
      wait: true
      weight: 200

  # Optimize PowerShell 
  - !task: {path: 'refinements\privacy\disable-powershell-telemetry.yml'}
  - !task: {path: 'refinements\security\execution-policy\set-execution-policy-unrestricted.yml'}
  # Installs the latest version of PowerShell to fix issues with the default PowerShell 5.1
  # https://github.com/PowerShell/PowerShell/issues/18989
  # https://github.com/PowerShell/PowerShell/issues/16914
  # https://github.com/microsoft/terminal/issues/16051
  - !run: 
      exe: 'winget'
      args: 'install --id Microsoft.PowerShell --source winget --silent --force --accept-source-agreements --accept-package-agreements'
      runas: currentUserElevated
      showOutput: false
      wait: true
      weight: 100
  - !powerShell:
      command: '.\NGEN-Optimizer.ps1'
      exeDir: true
      weight: 100

  # Configure DISM features
  - !writeStatus: {status: 'Configuring DISM Features'} 
  - !powerShell:
      command: '.\Feature-Management.ps1'
      exeDir: true
      weight: 100